cluster=$(kubectl config view |grep 'cluster: ' | cut -d ':' -f 2)
grep -x "alias k='kubectl'" /root/.bashrc >/dev/null
[[ $? != 0 ]] && echo "
alias k='kubectl'
alias kg='kubectl get'
alias kd='kubectl delete'
alias kgp='kubectl get pods'
alias kgd='kubectl get deployments'
alias ka='kubectl apply'
alias kc='kubectl create'
alias cls='clear' 
alias ll='ls -alh'"| tee -a /root/.bashrc
source /root/.bashrc
echo 'remove all yaml' 
rm *.yaml &>/dev/null
[ $? == 0 ] && echo remove all yaml done

kubectl delete pods cpu1 --force
kubectl delete pods big-corp-app --force


## Trobleshooting - kubelet 故障(2%?)
which ssh sshd &>/dev/null
[[ $? != 0 ]] && apt update && apt install -y ssh
which sudo &>/dev/null
[[ $? != 0 ]] && apt install sudo
grep -x '#PermitRootLogin yes' /etc/ssh/sshd_config && echo "PermitRootLogin yes" | tee -a /etc/ssh/sshd_config
systemctl restart ssh
grep wk8s-node-0 /etc/hosts &>/dev/null
[ $? != 0 ] && echo "127.0.0.1       localhost wk8s-node-0" | tee -a /etc/hosts 
grep ek8s-node-1 /etc/hosts &>/dev/null
[ $? != 0 ] && echo "172.18.0.3       localhost ek8s-node-1" | tee -a /etc/hosts 
echo -e \root\\nroot\\n| passwd root &>/dev/null
systemctl stop kubelet
echo "=== clean Trobleshooting - kubelet done ==="

### Pod Logs (5%)
[ ! -d /opt/KUTR00101 ] && mkdir -p /opt/KUTR00101 
[ -f /opt/KUTR00101/bar ] && rm /opt/KUTR00101/* 2>/dev/null
[ $? == 0 ] &&  echo Pod Logs clear done
kubectl apply -f https://raw.githubusercontent.com/f0603026/CKAtest/main/exam/yaml/F1-pod-log.yaml




### Check Ready Node (4%)
echo "=== clean Check Ready Node ==="
[ ! -d /opt/KUSC00402/ ] && mkdir -p /opt/KUSC00402/
[ -f /opt/KUSC00402/* ] && rm /opt/KUSC00402/*
echo 'Check Ready Node clear'
echo "=== clean Check Ready Node done ==="

### NodeSelector (4%)
echo "=== clean NodeSelector ==="
kubectl label node ${cluster}-worker disk=spinning
### CPU (5%)
[ -f /opt/KUTR00401/* ] && rm /opt/KUTR00401/*
[ ! -d /opt/KUTR00401/ ] && mkdir -p /opt/KUSC00401/


kubectl get pods -n kube-system |grep metrics-server
[ $? != '0' ] && kubectl apply -f https://raw.githubusercontent.com/f0603026/CKAtest/main/exam/yaml/metrics-server.yaml

[ -d /opt/KUTR00401/ ] && rm /opt/KUTR00401/* && touch /opt/KUTR00401/KURT00401.txt
kubectl label node ${cluster}-worker2 name=cpu-loader

kubectl run cpu1 --image=quay.io/cloudwalker/sre.base --restart=Never --labels=name=cpu-loader -- stress-ng --cpu 2  --timeout 2400s
echo "=== clean NodeSelector done ==="

### Sidecar (7%)
echo "=== clean Sidecar ==="
kubectl create -f https://raw.githubusercontent.com/f0603026/CKAtest/main/exam/yaml/F6-pod-sidecar.yaml
echo "=== clean Sidecar done ==="


